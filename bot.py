from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = "7965119634:AAEci0CN48mfJaNdEr7QSGP58VccMR2QLwI"
CHANNEL_USERNAME = "https://t.me/Isl_Cargo_Urok"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —é–∑–µ—Ä–Ω–µ–π–º –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
PDF_PATH = "C:/Users/Administrator/Desktop/Frame 171 (4).pdf"  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É PDF

# /start –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    await update.message.reply_text("üìÑ–ú–∞—ä–ª—É–º–æ—Ç–∏ –±–µ—à—Ç–∞—Ä –¥–∞—Ä –±–æ—Ä–∞–∏ isl cargo:")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ PDF
    try:
        with open(PDF_PATH, "rb") as pdf:
            await update.message.reply_document(document=pdf, filename="–ú–∞—ä–ª—É–º–æ—Ç.pdf")
    except FileNotFoundError:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: PDF —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    # –ö–Ω–æ–ø–∫–∞ "–î–∞–ª—å—à–µ"
    keyboard = [[InlineKeyboardButton("‚û°Ô∏è –î–∞–≤–æ–º –¥–æ–¥–∞–Ω", callback_data="next_1")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–¢—É–≥–º–∞–∏ '–î–∞–≤–æ–º-—Ä–æ' –∑–µ—Ä –∫—É–Ω–µ–¥:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query

    # –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ callback query —Å—Ä–∞–∑—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ç–∞–π–º-–∞—É—Ç–∞
    await query.answer()

    if query.data == "next_1":
        keyboard = [[InlineKeyboardButton("üì¶ –ê–¥—Ä–µ—Å—Ä–æ —Ä–∞–≤–æ–Ω –∫—É–Ω–µ–¥", callback_data="next_2")]]
        await query.edit_message_text(
            "–ë–∞—Ä–æ–∏ –¥–∞–≤–æ–º –¥–æ–¥–∞–Ω —Å–∞—Ä–∞–≤–≤–∞–ª –∞–¥—Ä–µ—Å–∏ –º–æ—Ä–æ –¥–∞—Ä –ø—Ä–æ–≥—Ä–∞–º–º–∞–∏ Pinduoduo –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥.",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    elif query.data == "next_2":
        await query.edit_message_text(
            "üì¶ –ê–¥—Ä–µ—Å —Å–∫–ª–∞–¥–æ–≤:\n\n"
            "Êî∂Ë¥ß‰∫∫Ôºö–ù–æ–º\n"
            "ËÅîÁ≥ªÔºö13020143323\n"
            "ÊµôÊ±üÁúÅÈáëÂçéÂ∏Ç‰πâ‰πåÂ∏ÇËãèÊ∫™ÂêéÂ±±ÈÇ¨‰∏ÄÂå∫58Ê†ã1Âè∑‰ªìÂ∫ì50\n"
            "(Dushanbe, –Ω–æ–º–µ—Ä, –∏–º—è)"
        )

        keyboard = [[InlineKeyboardButton("‚úÖ–û–±—É–Ω–∞ —à—É–¥–∞–º", callback_data="continue")]]
        await context.bot.send_message(
            chat_id=query.message.chat_id,
            text=f"–•–æ—Ö–∏—à –º–µ–∫—É–Ω–µ–º –¥–∞—Ä Telegram-–∫–∞–Ω–∞–ª–∏ –º–æ –æ–±—É–Ω–∞ —à–∞–≤–µ–¥: {CHANNEL_USERNAME}",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    elif query.data == "continue":
        await query.edit_message_text("‚úÖ–†–∞—Ö–º–∞—Ç –±–∞—Ä–æ–∏ –æ–±—É–Ω–∞ —à—É–¥–∞–Ω!")

        await context.bot.send_message(
            chat_id=query.message.chat_id,
            text="–ê–≥–∞—Ä –Ω–∞–º–µ–¥–æ–Ω–µ–¥ —á–∏ —Ç–∞–≤—Ä –¥–∞—Ä Pinduoduo –∞–¥—Ä–µ—Å—Ä–æ –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥ –≤–∏–¥–µ–æ—Ö–æ—Ä–æ —Ç–∞–º–æ—à–æ –∫—É–Ω–µ–¥ üëá"
        )

        keyboard = [
            [InlineKeyboardButton("–¢–∞—Ä–∑–∏ –≤–æ—Ä–∏–¥ –∫–∞—Ä–¥–∞–Ω–∏ –∞–¥—Ä–µ—Å—Å", url="https://example.com/video1")],
            [InlineKeyboardButton("–°–∫–∞—á–∞—Ç—å –Ω–∞ –ê–Ω–¥—Ä–æ–∏–¥", url="https://example.com/video2")]
        ]

        await context.bot.send_message(
            chat_id=query.message.chat_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –≤–∏–¥–µ–æ –Ω–∏–∂–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    application = Application.builder().token(TOKEN).read_timeout(30).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_button))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == "__main__":
    main()
